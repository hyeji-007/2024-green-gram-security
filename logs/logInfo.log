[2024-12-04 11:32:44 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 1980 (D:\khj\GreenGramVer2\build\classes\java\main started by Administrator in D:\khj\GreenGramVer2)
[2024-12-04 11:32:44 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-04 11:32:44 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-04 11:32:44 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-04 11:32:45 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-04 11:32:45 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-04 11:32:45 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-04 11:32:45 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-04 11:32:45 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-04 11:32:45 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 1003 ms
[2024-12-04 11:32:45 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyFileUtils - 생성자: D:\khj\2024-02\download\greengram_ver2
[2024-12-04 11:32:46 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-04 11:32:46 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-04 11:32:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-04 11:32:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-04 11:32:46 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 2.135 seconds (process running for 2.587)
[2024-12-04 11:32:46 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-04 11:32:46 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-04 11:32:46 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-04 11:32:46 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=4)
[2024-12-04 11:32:46 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-04 11:32:46 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1c7aab5b
[2024-12-04 11:32:46 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 4
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 10 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|39      | 하하하     |green7   |2024-12-02 16:21:10 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |0      |
|38      |asd      |asd      |2024-11-29 17:46:29 |5       |asd      |2b341828-7cc5-4ebf-b0c0-7d37718494fa.jpg |0      |
|37      |ㅁㅁ       |ㅁㅁ       |2024-11-29 16:21:12 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|36      |귀여운 고    |green2   |2024-11-29 15:54:57 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|35      |null     |null     |2024-11-29 14:35:27 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|34      |null     |null     |2024-11-29 14:32:36 |1       |홍길동      |null                                     |0      |
|4       |null     |green2   |2024-11-29 10:44:15 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|3       |null     |green2   |2024-11-29 10:42:28 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|1       |1212     |홍길동      |2024-11-28 17:35:56 |1       |홍길동      |null                                     |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 39
 {executed in 0 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81bf7fa-4326-4b3e-8b27-3878901178c4.jpg |
|-----------------------------------------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 39
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|23              |팬더는 귀엽다2 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|22              |팬더는 귀엽다  |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 38
 {executed in 0 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9e9ddb1e-3005-41e8-8762-d8ec211724af.jpg |
|-----------------------------------------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 38
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|11              |우준이 짱짱바보 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|4               |우준이 짱바보  |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|11035c28-bf32-4e28-b2c8-31d10f4cc658.jpg |
|-----------------------------------------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |7       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|28              |고야이     |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|27              |고양이 5   |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|26              |고양이 3   |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d63d577d-45e7-49a3-b26b-b66286d0536d.jpg |
|-----------------------------------------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|13              |팬더      |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|6               |팬더는 귀엽다 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e072291-3ee5-41cd-b859-ee1b0b586911.jpg |
|5b2cfdcb-01ca-417c-8c5d-fd3f274d8be5.jpg |
|a3ac7fab-99e5-4bf7-a08c-90936ece50fa.jpg |
|-----------------------------------------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|52              |9       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|51              |8       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|50              |7       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|49              |6       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|660a50bf-d611-4a15-ae51-e36055b76547.jpg |
|744f7326-cf08-4ed2-bbe3-575621c2958f.jpg |
|9486ae08-ca98-4a66-b1cd-c7d873308217.jpg |
|-----------------------------------------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|8               |포항항     |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|225c1bed-106d-4d7a-a6c1-ac928b624817.jpg |
|714aff02-7ff3-44e2-a8bf-fad8c2e72539.jpg |
|84ae25a6-fef9-43c3-b749-7e65b36034a5.jpg |
|-----------------------------------------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|9               |팬더는 귀엽다 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 1 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|
|pic     |
|--------|
|사진1.jpg |
|사진2.jpg |
|사진3.jpg |
|--------|

[2024-12-04 11:32:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:32:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:32:59 INFO http-nio-8080-exec-6] [com.green.greengramver2.user.UserController] UserInsReq: UserSignUpReq(userId=0, pic=null, uid=asd, upw=asd, nickName=null), file: 119255016.1.jpg
[2024-12-04 11:32:59 INFO http-nio-8080-exec-6] [com.green.greengramver2.user.UserService] hashedPassword: $2a$10$F7MqP7gtyVu8ji015a/89.2vHUVHG5gk1peuxGwgY7kXSGHumcE62
[2024-12-04 11:32:59 WARN http-nio-8080-exec-6] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry 'asd' for key 'uid'
[2024-12-04 11:32:59 ERRORhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'asd'
        , upw = '$2a$10$F7MqP7gtyVu8ji015a/89.2vHUVHG5gk1peuxGwgY7kXSGHumcE62'
        , pic = 'c116a0c1-d864-4c5d-b39c-9a26fbf64d76.jpg'
        , nick_name = '안경잽이 류현욱'
 {FAILED after 4 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=3) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy88.insUser(Unknown Source)
	at com.green.greengramver2.user.UserService.postSignUp(UserService.java:36)
	at com.green.greengramver2.user.UserController.signUp(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-04 11:32:59 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=3) Duplicate entry 'asd' for key 'uid'
### The error may exist in file [D:\khj\GreenGramVer2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user         SET uid = ?         , upw = ?         , pic = ?         , nick_name = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=3) Duplicate entry 'asd' for key 'uid'
; (conn=3) Duplicate entry 'asd' for key 'uid'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=3) Duplicate entry 'asd' for key 'uid'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy88.insUser(Unknown Source)
	at com.green.greengramver2.user.UserService.postSignUp(UserService.java:36)
	at com.green.greengramver2.user.UserController.signUp(UserController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-04 11:33:05 INFO http-nio-8080-exec-4] [com.green.greengramver2.user.UserController] UserInsReq: UserSignUpReq(userId=0, pic=null, uid=zxc, upw=zxc, nickName=null), file: 119255016.1.jpg
[2024-12-04 11:33:05 INFO http-nio-8080-exec-4] [com.green.greengramver2.user.UserService] hashedPassword: $2a$10$2TtcBdfXcIoBbZoVo9vAQ.mcgOcHcNNyr0cll/9yMrhVnXDyAkudC
[2024-12-04 11:33:05 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'zxc'
        , upw = '$2a$10$2TtcBdfXcIoBbZoVo9vAQ.mcgOcHcNNyr0cll/9yMrhVnXDyAkudC'
        , pic = '8459560d-8987-4c9d-bf51-597d18ff8e58.jpg'
        , nick_name = '많이먹는 장재웅'
 {executed in 7 msec}
[2024-12-04 11:33:05 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO user
        SET uid = 'zxc'
        , upw = '$2a$10$2TtcBdfXcIoBbZoVo9vAQ.mcgOcHcNNyr0cll/9yMrhVnXDyAkudC'
        , pic = '8459560d-8987-4c9d-bf51-597d18ff8e58.jpg'
        , nick_name = '많이먹는 장재웅'
 {executed in 1 msec}
[2024-12-04 11:33:05 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|7         |
|----------|

[2024-12-04 11:33:05 INFO http-nio-8080-exec-4] [com.green.greengramver2.user.UserService] middlePath: user/7
[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , pic, upw
        FROM user
        WHERE uid = 'zxc'
 {executed in 7 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|user_id |nickname |pic                                      |upw                                                          |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|7       |많이먹는 장재웅 |8459560d-8987-4c9d-bf51-597d18ff8e58.jpg |$2a$10$2TtcBdfXcIoBbZoVo9vAQ.mcgOcHcNNyr0cll/9yMrhVnXDyAkudC |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|

[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7)
[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 7
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|39      | 하하하     |green7   |2024-12-02 16:21:10 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |0      |
|38      |asd      |asd      |2024-11-29 17:46:29 |5       |asd      |2b341828-7cc5-4ebf-b0c0-7d37718494fa.jpg |0      |
|37      |ㅁㅁ       |ㅁㅁ       |2024-11-29 16:21:12 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|36      |귀여운 고    |green2   |2024-11-29 15:54:57 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|35      |null     |null     |2024-11-29 14:35:27 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|34      |null     |null     |2024-11-29 14:32:36 |1       |홍길동      |null                                     |0      |
|4       |null     |green2   |2024-11-29 10:44:15 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|3       |null     |green2   |2024-11-29 10:42:28 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|1       |1212     |홍길동      |2024-11-28 17:35:56 |1       |홍길동      |null                                     |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 39
 {executed in 0 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81bf7fa-4326-4b3e-8b27-3878901178c4.jpg |
|-----------------------------------------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 39
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|23              |팬더는 귀엽다2 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|22              |팬더는 귀엽다  |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 38
 {executed in 0 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9e9ddb1e-3005-41e8-8762-d8ec211724af.jpg |
|-----------------------------------------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 38
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|11              |우준이 짱짱바보 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|4               |우준이 짱바보  |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|11035c28-bf32-4e28-b2c8-31d10f4cc658.jpg |
|-----------------------------------------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |7       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|28              |고야이     |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|27              |고양이 5   |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|26              |고양이 3   |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d63d577d-45e7-49a3-b26b-b66286d0536d.jpg |
|-----------------------------------------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|13              |팬더      |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|6               |팬더는 귀엽다 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e072291-3ee5-41cd-b859-ee1b0b586911.jpg |
|5b2cfdcb-01ca-417c-8c5d-fd3f274d8be5.jpg |
|a3ac7fab-99e5-4bf7-a08c-90936ece50fa.jpg |
|-----------------------------------------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|52              |9       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|51              |8       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|50              |7       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|49              |6       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|660a50bf-d611-4a15-ae51-e36055b76547.jpg |
|744f7326-cf08-4ed2-bbe3-575621c2958f.jpg |
|9486ae08-ca98-4a66-b1cd-c7d873308217.jpg |
|-----------------------------------------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|8               |포항항     |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 1 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|225c1bed-106d-4d7a-a6c1-ac928b624817.jpg |
|714aff02-7ff3-44e2-a8bf-fad8c2e72539.jpg |
|84ae25a6-fef9-43c3-b749-7e65b36034a5.jpg |
|-----------------------------------------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|9               |팬더는 귀엽다 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|
|pic     |
|--------|
|사진1.jpg |
|사진2.jpg |
|사진3.jpg |
|--------|

[2024-12-04 11:33:07 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:07 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7)
[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 7
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|39      | 하하하     |green7   |2024-12-02 16:21:10 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |0      |
|38      |asd      |asd      |2024-11-29 17:46:29 |5       |asd      |2b341828-7cc5-4ebf-b0c0-7d37718494fa.jpg |0      |
|37      |ㅁㅁ       |ㅁㅁ       |2024-11-29 16:21:12 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|36      |귀여운 고    |green2   |2024-11-29 15:54:57 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|35      |null     |null     |2024-11-29 14:35:27 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|34      |null     |null     |2024-11-29 14:32:36 |1       |홍길동      |null                                     |0      |
|4       |null     |green2   |2024-11-29 10:44:15 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|3       |null     |green2   |2024-11-29 10:42:28 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|1       |1212     |홍길동      |2024-11-28 17:35:56 |1       |홍길동      |null                                     |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 39
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81bf7fa-4326-4b3e-8b27-3878901178c4.jpg |
|-----------------------------------------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 39
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|23              |팬더는 귀엽다2 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|22              |팬더는 귀엽다  |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 38
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9e9ddb1e-3005-41e8-8762-d8ec211724af.jpg |
|-----------------------------------------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 38
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|11              |우준이 짱짱바보 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|4               |우준이 짱바보  |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|11035c28-bf32-4e28-b2c8-31d10f4cc658.jpg |
|-----------------------------------------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |7       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|28              |고야이     |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|27              |고양이 5   |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|26              |고양이 3   |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d63d577d-45e7-49a3-b26b-b66286d0536d.jpg |
|-----------------------------------------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|13              |팬더      |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|6               |팬더는 귀엽다 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e072291-3ee5-41cd-b859-ee1b0b586911.jpg |
|5b2cfdcb-01ca-417c-8c5d-fd3f274d8be5.jpg |
|a3ac7fab-99e5-4bf7-a08c-90936ece50fa.jpg |
|-----------------------------------------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|52              |9       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|51              |8       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|50              |7       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|49              |6       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|660a50bf-d611-4a15-ae51-e36055b76547.jpg |
|744f7326-cf08-4ed2-bbe3-575621c2958f.jpg |
|9486ae08-ca98-4a66-b1cd-c7d873308217.jpg |
|-----------------------------------------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|8               |포항항     |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|225c1bed-106d-4d7a-a6c1-ac928b624817.jpg |
|714aff02-7ff3-44e2-a8bf-fad8c2e72539.jpg |
|84ae25a6-fef9-43c3-b749-7e65b36034a5.jpg |
|-----------------------------------------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|9               |팬더는 귀엽다 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|
|pic     |
|--------|
|사진1.jpg |
|사진2.jpg |
|사진3.jpg |
|--------|

[2024-12-04 11:33:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:09 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:33:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
        SET writer_user_id = 7
        , contents = 'asd'
        , location = 'asd'
 {executed in 0 msec}
[2024-12-04 11:33:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
        SET writer_user_id = 7
        , contents = 'asd'
        , location = 'asd'
 {executed in 0 msec}
[2024-12-04 11:33:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|40        |
|----------|

[2024-12-04 11:33:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pics
        ( feed_id, pic )
        VALUES
         (  
            40, '590ba09d-9337-4093-971a-b693a77d589f.jpg'
         )
 {executed in 1 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7)
[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 7
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|40      |asd      |asd      |2024-12-04 11:33:20 |7       |많이먹는 장재웅 |8459560d-8987-4c9d-bf51-597d18ff8e58.jpg |0      |
|39      | 하하하     |green7   |2024-12-02 16:21:10 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |0      |
|38      |asd      |asd      |2024-11-29 17:46:29 |5       |asd      |2b341828-7cc5-4ebf-b0c0-7d37718494fa.jpg |0      |
|37      |ㅁㅁ       |ㅁㅁ       |2024-11-29 16:21:12 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|36      |귀여운 고    |green2   |2024-11-29 15:54:57 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|35      |null     |null     |2024-11-29 14:35:27 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|34      |null     |null     |2024-11-29 14:32:36 |1       |홍길동      |null                                     |0      |
|4       |null     |green2   |2024-11-29 10:44:15 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|3       |null     |green2   |2024-11-29 10:42:28 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|1       |1212     |홍길동      |2024-11-28 17:35:56 |1       |홍길동      |null                                     |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 40
 {executed in 0 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|590ba09d-9337-4093-971a-b693a77d589f.jpg |
|-----------------------------------------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 40
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 39
 {executed in 0 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81bf7fa-4326-4b3e-8b27-3878901178c4.jpg |
|-----------------------------------------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 39
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|23              |팬더는 귀엽다2 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|22              |팬더는 귀엽다  |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 38
 {executed in 1 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9e9ddb1e-3005-41e8-8762-d8ec211724af.jpg |
|-----------------------------------------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 38
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|11              |우준이 짱짱바보 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|4               |우준이 짱바보  |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|11035c28-bf32-4e28-b2c8-31d10f4cc658.jpg |
|-----------------------------------------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |7       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|28              |고야이     |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|27              |고양이 5   |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|26              |고양이 3   |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d63d577d-45e7-49a3-b26b-b66286d0536d.jpg |
|-----------------------------------------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|13              |팬더      |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|6               |팬더는 귀엽다 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e072291-3ee5-41cd-b859-ee1b0b586911.jpg |
|5b2cfdcb-01ca-417c-8c5d-fd3f274d8be5.jpg |
|a3ac7fab-99e5-4bf7-a08c-90936ece50fa.jpg |
|-----------------------------------------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|52              |9       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|51              |8       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|50              |7       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|49              |6       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|660a50bf-d611-4a15-ae51-e36055b76547.jpg |
|744f7326-cf08-4ed2-bbe3-575621c2958f.jpg |
|9486ae08-ca98-4a66-b1cd-c7d873308217.jpg |
|-----------------------------------------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|8               |포항항     |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 1 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|225c1bed-106d-4d7a-a6c1-ac928b624817.jpg |
|714aff02-7ff3-44e2-a8bf-fad8c2e72539.jpg |
|84ae25a6-fef9-43c3-b749-7e65b36034a5.jpg |
|-----------------------------------------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|9               |팬더는 귀엽다 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|
|pic     |
|--------|
|사진1.jpg |
|사진2.jpg |
|사진3.jpg |
|--------|

[2024-12-04 11:33:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:33:41 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:34:09 INFO http-nio-8080-exec-4] [com.green.greengramver2.user.UserController] UserInsReq: UserSignUpReq(userId=0, pic=null, uid=qwe, upw=qwe, nickName=null), file: 20240101502296.jpg
[2024-12-04 11:34:10 INFO http-nio-8080-exec-4] [com.green.greengramver2.user.UserService] hashedPassword: $2a$10$dGShWD/h/A66zVxliuhb8.WTLHWsPBE5HcL2KvdUDCSQHVBRT8Lg6
[2024-12-04 11:34:10 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'qwe'
        , upw = '$2a$10$dGShWD/h/A66zVxliuhb8.WTLHWsPBE5HcL2KvdUDCSQHVBRT8Lg6'
        , pic = 'a3a2114a-bae7-4fc0-bed4-993f084d8691.jpg'
        , nick_name = '철푸덕 권혜지'
 {executed in 2 msec}
[2024-12-04 11:34:10 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO user
        SET uid = 'qwe'
        , upw = '$2a$10$dGShWD/h/A66zVxliuhb8.WTLHWsPBE5HcL2KvdUDCSQHVBRT8Lg6'
        , pic = 'a3a2114a-bae7-4fc0-bed4-993f084d8691.jpg'
        , nick_name = '철푸덕 권혜지'
 {executed in 0 msec}
[2024-12-04 11:34:10 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|8         |
|----------|

[2024-12-04 11:34:10 INFO http-nio-8080-exec-4] [com.green.greengramver2.user.UserService] middlePath: user/8
[2024-12-04 11:34:11 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , pic, upw
        FROM user
        WHERE uid = 'qwe'
 {executed in 1 msec}
[2024-12-04 11:34:11 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|user_id |nickname |pic                                      |upw                                                          |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|8       |철푸덕 권혜지  |a3a2114a-bae7-4fc0-bed4-993f084d8691.jpg |$2a$10$dGShWD/h/A66zVxliuhb8.WTLHWsPBE5HcL2KvdUDCSQHVBRT8Lg6 |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|

[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8)
[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 8
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|40      |asd      |asd      |2024-12-04 11:33:20 |7       |많이먹는 장재웅 |8459560d-8987-4c9d-bf51-597d18ff8e58.jpg |0      |
|39      | 하하하     |green7   |2024-12-02 16:21:10 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |0      |
|38      |asd      |asd      |2024-11-29 17:46:29 |5       |asd      |2b341828-7cc5-4ebf-b0c0-7d37718494fa.jpg |0      |
|37      |ㅁㅁ       |ㅁㅁ       |2024-11-29 16:21:12 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|36      |귀여운 고    |green2   |2024-11-29 15:54:57 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|35      |null     |null     |2024-11-29 14:35:27 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|34      |null     |null     |2024-11-29 14:32:36 |1       |홍길동      |null                                     |0      |
|4       |null     |green2   |2024-11-29 10:44:15 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|3       |null     |green2   |2024-11-29 10:42:28 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|1       |1212     |홍길동      |2024-11-28 17:35:56 |1       |홍길동      |null                                     |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 40
 {executed in 1 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|590ba09d-9337-4093-971a-b693a77d589f.jpg |
|-----------------------------------------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 40
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 39
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81bf7fa-4326-4b3e-8b27-3878901178c4.jpg |
|-----------------------------------------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 39
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|23              |팬더는 귀엽다2 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|22              |팬더는 귀엽다  |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 38
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9e9ddb1e-3005-41e8-8762-d8ec211724af.jpg |
|-----------------------------------------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 38
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|11              |우준이 짱짱바보 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|4               |우준이 짱바보  |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|11035c28-bf32-4e28-b2c8-31d10f4cc658.jpg |
|-----------------------------------------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |7       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|28              |고야이     |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|27              |고양이 5   |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|26              |고양이 3   |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d63d577d-45e7-49a3-b26b-b66286d0536d.jpg |
|-----------------------------------------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|13              |팬더      |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|6               |팬더는 귀엽다 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e072291-3ee5-41cd-b859-ee1b0b586911.jpg |
|5b2cfdcb-01ca-417c-8c5d-fd3f274d8be5.jpg |
|a3ac7fab-99e5-4bf7-a08c-90936ece50fa.jpg |
|-----------------------------------------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|52              |9       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|51              |8       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|50              |7       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|49              |6       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|660a50bf-d611-4a15-ae51-e36055b76547.jpg |
|744f7326-cf08-4ed2-bbe3-575621c2958f.jpg |
|9486ae08-ca98-4a66-b1cd-c7d873308217.jpg |
|-----------------------------------------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|8               |포항항     |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|225c1bed-106d-4d7a-a6c1-ac928b624817.jpg |
|714aff02-7ff3-44e2-a8bf-fad8c2e72539.jpg |
|84ae25a6-fef9-43c3-b749-7e65b36034a5.jpg |
|-----------------------------------------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|9               |팬더는 귀엽다 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|
|pic     |
|--------|
|사진1.jpg |
|사진2.jpg |
|사진3.jpg |
|--------|

[2024-12-04 11:34:12 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:12 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:34:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
        SET writer_user_id = 8
        , contents = 'zxc'
        , location = 'xzc'
 {executed in 0 msec}
[2024-12-04 11:34:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
        SET writer_user_id = 8
        , contents = 'zxc'
        , location = 'xzc'
 {executed in 0 msec}
[2024-12-04 11:34:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|41        |
|----------|

[2024-12-04 11:34:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pics
        ( feed_id, pic )
        VALUES
         (  
            41, '746ca268-4f7e-40c3-b1fe-0c20bfadaa07.jpg'
         )
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [com.green.greengramver2.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8)
[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 8
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|41      |zxc      |xzc      |2024-12-04 11:34:18 |8       |철푸덕 권혜지  |a3a2114a-bae7-4fc0-bed4-993f084d8691.jpg |0      |
|40      |asd      |asd      |2024-12-04 11:33:20 |7       |많이먹는 장재웅 |8459560d-8987-4c9d-bf51-597d18ff8e58.jpg |0      |
|39      | 하하하     |green7   |2024-12-02 16:21:10 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |0      |
|38      |asd      |asd      |2024-11-29 17:46:29 |5       |asd      |2b341828-7cc5-4ebf-b0c0-7d37718494fa.jpg |0      |
|37      |ㅁㅁ       |ㅁㅁ       |2024-11-29 16:21:12 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|36      |귀여운 고    |green2   |2024-11-29 15:54:57 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|35      |null     |null     |2024-11-29 14:35:27 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|34      |null     |null     |2024-11-29 14:32:36 |1       |홍길동      |null                                     |0      |
|4       |null     |green2   |2024-11-29 10:44:15 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|3       |null     |green2   |2024-11-29 10:42:28 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|1       |1212     |홍길동      |2024-11-28 17:35:56 |1       |홍길동      |null                                     |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 41
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|746ca268-4f7e-40c3-b1fe-0c20bfadaa07.jpg |
|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 41
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 40
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|590ba09d-9337-4093-971a-b693a77d589f.jpg |
|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 40
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 39
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81bf7fa-4326-4b3e-8b27-3878901178c4.jpg |
|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 39
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|23              |팬더는 귀엽다2 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|22              |팬더는 귀엽다  |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 38
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9e9ddb1e-3005-41e8-8762-d8ec211724af.jpg |
|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 38
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|11              |우준이 짱짱바보 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|4               |우준이 짱바보  |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|11035c28-bf32-4e28-b2c8-31d10f4cc658.jpg |
|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |7       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|28              |고야이     |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|27              |고양이 5   |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|26              |고양이 3   |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d63d577d-45e7-49a3-b26b-b66286d0536d.jpg |
|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|13              |팬더      |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|6               |팬더는 귀엽다 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e072291-3ee5-41cd-b859-ee1b0b586911.jpg |
|5b2cfdcb-01ca-417c-8c5d-fd3f274d8be5.jpg |
|a3ac7fab-99e5-4bf7-a08c-90936ece50fa.jpg |
|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|52              |9       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|51              |8       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|50              |7       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|49              |6       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|660a50bf-d611-4a15-ae51-e36055b76547.jpg |
|744f7326-cf08-4ed2-bbe3-575621c2958f.jpg |
|9486ae08-ca98-4a66-b1cd-c7d873308217.jpg |
|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|8               |포항항     |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|225c1bed-106d-4d7a-a6c1-ac928b624817.jpg |
|714aff02-7ff3-44e2-a8bf-fad8c2e72539.jpg |
|84ae25a6-fef9-43c3-b749-7e65b36034a5.jpg |
|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|9               |팬더는 귀엽다 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|
|pic     |
|--------|
|사진1.jpg |
|사진2.jpg |
|사진3.jpg |
|--------|

[2024-12-04 11:34:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:34:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 14:19:58 WARN HikariPool-1 housekeeper] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=30m9s291ms190µs301ns).
[2024-12-04 15:14:58 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)
[2024-12-04 15:14:58 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-04 15:14:58 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-04 15:14:58 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-04 15:14:58 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 1980 (D:\khj\GreenGramVer2\build\classes\java\main started by Administrator in D:\khj\GreenGramVer2)
[2024-12-04 15:14:58 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-04 15:14:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-04 15:14:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-04 15:14:59 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-04 15:14:59 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-04 15:14:59 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-04 15:14:59 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 204 ms
[2024-12-04 15:14:59 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyFileUtils - 생성자: D:\khj\2024-02\download\greengram_ver2
[2024-12-04 15:14:59 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-04 15:14:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-04 15:14:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-04 15:14:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-04 15:14:59 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.378 seconds (process running for 13335.279)
[2024-12-04 15:14:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-04 17:04:42 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-04 17:04:42 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-04 17:04:42 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 1980 (D:\khj\GreenGramVer2\build\classes\java\main started by Administrator in D:\khj\GreenGramVer2)
[2024-12-04 17:04:42 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-04 17:04:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-04 17:04:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-04 17:04:42 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-04 17:04:42 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-04 17:04:42 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-04 17:04:42 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 189 ms
[2024-12-04 17:04:42 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyFileUtils - 생성자: D:\khj\2024-02\download\greengram_ver2
[2024-12-04 17:04:43 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-04 17:04:43 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-04 17:04:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-04 17:04:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-04 17:04:43 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.345 seconds (process running for 19919.191)
[2024-12-04 17:04:43 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-04 17:05:01 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-04 17:05:01 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-04 17:05:02 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 1980 (D:\khj\GreenGramVer2\build\classes\java\main started by Administrator in D:\khj\GreenGramVer2)
[2024-12-04 17:05:02 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-04 17:05:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-04 17:05:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-04 17:05:02 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-04 17:05:02 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-04 17:05:02 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-04 17:05:02 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 171 ms
[2024-12-04 17:05:02 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyFileUtils - 생성자: D:\khj\2024-02\download\greengram_ver2
[2024-12-04 17:05:02 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-04 17:05:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-04 17:05:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-04 17:05:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-04 17:05:02 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.306 seconds (process running for 19938.385)
[2024-12-04 17:05:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-04 18:49:08 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-04 18:49:08 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-04 18:49:08 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-04 18:49:08 INFO http-nio-8080-exec-6] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 150 ms
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8)
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4b0d2dcb
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = 8
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|41      |zxc      |xzc      |2024-12-04 11:34:18 |8       |철푸덕 권혜지  |a3a2114a-bae7-4fc0-bed4-993f084d8691.jpg |0      |
|40      |asd      |asd      |2024-12-04 11:33:20 |7       |많이먹는 장재웅 |8459560d-8987-4c9d-bf51-597d18ff8e58.jpg |0      |
|39      | 하하하     |green7   |2024-12-02 16:21:10 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |0      |
|38      |asd      |asd      |2024-11-29 17:46:29 |5       |asd      |2b341828-7cc5-4ebf-b0c0-7d37718494fa.jpg |0      |
|37      |ㅁㅁ       |ㅁㅁ       |2024-11-29 16:21:12 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|36      |귀여운 고    |green2   |2024-11-29 15:54:57 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|35      |null     |null     |2024-11-29 14:35:27 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|34      |null     |null     |2024-11-29 14:32:36 |1       |홍길동      |null                                     |0      |
|4       |null     |green2   |2024-11-29 10:44:15 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|3       |null     |green2   |2024-11-29 10:42:28 |2       |bbong2   |4b9404e6-d275-4522-bf16-c3f6ac1ff9b1.jpg |0      |
|1       |1212     |홍길동      |2024-11-28 17:35:56 |1       |홍길동      |null                                     |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT pic
        FROM feed_pics
        WHERE feed_id = 41
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|746ca268-4f7e-40c3-b1fe-0c20bfadaa07.jpg |
|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 41
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT pic
        FROM feed_pics
        WHERE feed_id = 40
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|590ba09d-9337-4093-971a-b693a77d589f.jpg |
|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 40
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT pic
        FROM feed_pics
        WHERE feed_id = 39
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81bf7fa-4326-4b3e-8b27-3878901178c4.jpg |
|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 39
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|23              |팬더는 귀엽다2 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|22              |팬더는 귀엽다  |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT pic
        FROM feed_pics
        WHERE feed_id = 38
 {executed in 1 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9e9ddb1e-3005-41e8-8762-d8ec211724af.jpg |
|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 38
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|---------|--------|---------|-----------------------------------------|
|feed_comment_id |comment  |user_id |writernm |pic                                      |
|----------------|---------|--------|---------|-----------------------------------------|
|11              |우준이 짱짱바보 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|4               |우준이 짱바보  |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|---------|--------|---------|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|11035c28-bf32-4e28-b2c8-31d10f4cc658.jpg |
|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 37
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|29              |7       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|28              |고야이     |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|27              |고양이 5   |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|26              |고양이 3   |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT pic
        FROM feed_pics
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d63d577d-45e7-49a3-b26b-b66286d0536d.jpg |
|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 36
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|13              |팬더      |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|6               |팬더는 귀엽다 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT pic
        FROM feed_pics
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2e072291-3ee5-41cd-b859-ee1b0b586911.jpg |
|5b2cfdcb-01ca-417c-8c5d-fd3f274d8be5.jpg |
|a3ac7fab-99e5-4bf7-a08c-90936ece50fa.jpg |
|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 35
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|52              |9       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|51              |8       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|50              |7       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|49              |6       |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT pic
        FROM feed_pics
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|660a50bf-d611-4a15-ae51-e36055b76547.jpg |
|744f7326-cf08-4ed2-bbe3-575621c2958f.jpg |
|9486ae08-ca98-4a66-b1cd-c7d873308217.jpg |
|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|8               |포항항     |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|225c1bed-106d-4d7a-a6c1-ac928b624817.jpg |
|714aff02-7ff3-44e2-a8bf-fad8c2e72539.jpg |
|84ae25a6-fef9-43c3-b749-7e65b36034a5.jpg |
|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|9               |팬더는 귀엽다 |4       |bbong4   |96f8e19b-7448-42d6-b95d-18a06af6d37a.jpg |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 1 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|
|pic     |
|--------|
|사진1.jpg |
|사진2.jpg |
|사진3.jpg |
|--------|

[2024-12-04 19:39:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT A.feed_comment_id AS feedCommentId
        , A.comment
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        FROM feed_comments A
        INNER JOIN user B
        ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 19:39:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 20:08:55 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-04 20:08:55 INFO Thread-15] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:08:55 INFO Thread-15] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-04 20:08:55 INFO Thread-15] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-04 20:08:55 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 1980 (D:\khj\GreenGramVer2\build\classes\java\main started by Administrator in D:\khj\GreenGramVer2)
[2024-12-04 20:08:55 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-04 20:08:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-04 20:08:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:08:55 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-04 20:08:55 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-04 20:08:55 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-04 20:08:55 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 198 ms
[2024-12-04 20:08:55 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyFileUtils - 생성자: D:\khj\2024-02\download\greengram_ver2
[2024-12-04 20:08:55 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-04 20:08:56 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-04 20:08:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:08:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-04 20:08:56 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.362 seconds (process running for 30973.254)
[2024-12-04 20:08:56 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-04 20:13:43 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-04 20:13:43 INFO Thread-19] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:13:43 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 1980 (D:\khj\GreenGramVer2\build\classes\java\main started by Administrator in D:\khj\GreenGramVer2)
[2024-12-04 20:13:43 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-04 20:13:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-04 20:13:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:13:43 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-04 20:13:43 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-04 20:13:43 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-04 20:13:43 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 178 ms
[2024-12-04 20:13:43 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyFileUtils - 생성자: D:\khj\2024-02\download\greengram_ver2
[2024-12-04 20:13:43 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-04 20:13:43 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-04 20:13:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:13:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-04 20:13:43 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.328 seconds (process running for 31260.877)
[2024-12-04 20:13:43 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-04 20:18:06 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
[2024-12-04 20:18:06 INFO Thread-23] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:18:07 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 1980 (D:\khj\GreenGramVer2\build\classes\java\main started by Administrator in D:\khj\GreenGramVer2)
[2024-12-04 20:18:07 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-04 20:18:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-04 20:18:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:18:07 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-04 20:18:07 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-04 20:18:07 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-04 20:18:07 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 176 ms
[2024-12-04 20:18:07 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyFileUtils - 생성자: D:\khj\2024-02\download\greengram_ver2
[2024-12-04 20:18:07 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-04 20:18:07 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-04 20:18:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:18:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-04 20:18:07 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.311 seconds (process running for 31524.548)
[2024-12-04 20:18:07 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-04 20:18:38 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
[2024-12-04 20:18:38 INFO Thread-27] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:18:38 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 1980 (D:\khj\GreenGramVer2\build\classes\java\main started by Administrator in D:\khj\GreenGramVer2)
[2024-12-04 20:18:38 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-04 20:18:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-04 20:18:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:18:38 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-04 20:18:38 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-04 20:18:38 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-04 20:18:38 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 164 ms
[2024-12-04 20:18:38 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyFileUtils - 생성자: D:\khj\2024-02\download\greengram_ver2
[2024-12-04 20:18:38 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-04 20:18:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-04 20:18:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:18:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-04 20:18:38 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.293 seconds (process running for 31555.996)
[2024-12-04 20:18:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-04 20:19:31 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
[2024-12-04 20:19:31 INFO Thread-31] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:19:31 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 1980 (D:\khj\GreenGramVer2\build\classes\java\main started by Administrator in D:\khj\GreenGramVer2)
[2024-12-04 20:19:31 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-04 20:19:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-04 20:19:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:19:31 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-04 20:19:31 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-04 20:19:31 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-04 20:19:31 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 159 ms
[2024-12-04 20:19:31 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyFileUtils - 생성자: D:\khj\2024-02\download\greengram_ver2
[2024-12-04 20:19:31 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-04 20:19:31 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-04 20:19:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:19:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-04 20:19:31 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.286 seconds (process running for 31608.8)
[2024-12-04 20:19:31 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-04 20:20:16 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
[2024-12-04 20:20:16 INFO Thread-35] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:20:16 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 1980 (D:\khj\GreenGramVer2\build\classes\java\main started by Administrator in D:\khj\GreenGramVer2)
[2024-12-04 20:20:16 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-04 20:20:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-04 20:20:16 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:20:16 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-04 20:20:16 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-04 20:20:16 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-04 20:20:16 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 157 ms
[2024-12-04 20:20:16 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyFileUtils - 생성자: D:\khj\2024-02\download\greengram_ver2
[2024-12-04 20:20:16 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-04 20:20:16 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-04 20:20:16 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-04 20:20:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-04 20:20:16 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.282 seconds (process running for 31653.942)
[2024-12-04 20:20:16 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
